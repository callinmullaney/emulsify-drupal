// These styles only affect the colors "Usage" page in the component library
.cl-colors {
  padding: 1rem;
}

.cl-colors__list {
  display: flex;
  flex-wrap: wrap;
  margin: 0 0 2rem;
  padding: 0;
}

.cl-colors__item {
  list-style: none;
  padding: 1rem 2rem;
  transition: all 0.4s;
  flex: 1 1 20%;
  min-width: 150px;
  min-height: 150px;
  display: flex;
  justify-content: center;
  align-items: flex-end;
}

// Dynamically set swatch text color based on the lightness of the background color
@function set-color($color, $theme) {
  @if (lightness($color) < 50) {
    @return clr(text);
  } @else {
    @return clr(text, inverse);
  }
}

// Set color swatch styles based on defined color in $color-palette.
@each $theme, $palette in $color-palette {

  .cl-colors__list--#{$theme} {
    background-color: clr(background, $theme);
    padding: 2rem;
  }

  @each $clrname, $color in $palette {

    @if (type-of($color) == map) {

      @each $variant, $value in $color {

        @if ($variant == 'base') {
          .cl-colors__item--#{$clrname} {
            background-color: clr($clrname);
            color: set-color($value, $theme);
          }
        }
        @else {
          .cl-colors__item--#{$clrname}-#{$variant} {
            background-color: clr($clrname, $variant);
            color: set-color($value, $theme);
          }
        }
      }
    }
    @else {
      .cl-colors__item--#{$clrname} {
        background-color: clr($clrname);
        color: set-color($color, $theme);
      }
    }
  }
}
