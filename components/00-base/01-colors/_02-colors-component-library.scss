// These styles only affect the colors "Usage" page in the component library
.cl-colors {
  padding: 1rem;
}

.cl-colors__list {
  display: flex;
  flex-wrap: wrap;
  margin: 0 0 2rem;
  padding: 0;
}

.cl-colors__item {
  list-style: none;
  padding: 2rem;
  transition: all 0.4s;
  flex: 1 1 20%;
  min-width: 150px;
  min-height: 150px;
  display: flex;
  justify-content: center;
  align-items: flex-start;
  font-weight: bold;
  font-size: 110%;
  text-align: center;
}

// Add the color definition from the color-palette map.
@mixin color-tag($color) {
  position: relative;

  &::after {
    content: '#{$color}';
    display: block;
    padding: 5px;
    font-weight: bold;
    text-align: center;
    background-color: $color;
    position: absolute;
    bottom: 2rem;
    left: 0;
    right: 0;
  }
}

// Dynamically set swatch text color based on the lightness of the background color
@function set-color($color, $theme) {
  @if (lightness($color) > 50) {
    @return clr(text, $theme);
  } @else {
    @return clr(text, inverse, $theme);
  }
}

// Set color swatch styles based on defined color in $color-palette.
@each $theme, $palette in $color-palette {

  .cl-colors__list--#{$theme} {
    background-color: clr(background, $theme);
    padding: 2rem;

    @each $clrname, $color in $palette {

      @if (type-of($color) == map) {

        @each $variant, $value in $color {

          @if ($variant == 'base') {
            .cl-colors__item--#{$clrname} {
              @include color-tag($value);

              background-color: clr($clrname);
              color: set-color($value, $theme);
            }
          }
          @else {
            .cl-colors__item--#{$clrname}-#{$variant} {
              @include color-tag($value);

              background-color: clr($clrname, $variant);
              color: set-color($value, $theme);
            }
          }
        }
      }
      @else {
        .cl-colors__item--#{$clrname} {
          @include color-tag($color);

          background-color: clr($clrname);
          color: set-color($color, $theme);
        }
      }
    }
  }
}
